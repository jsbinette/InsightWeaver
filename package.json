{
  "name": "insightweaver",
  "displayName": "InsightWeaver",
  "description": "Customizable Instructions Tags for LLM",
  "version": "0.1.9",
  "license": "GPLv3",
  "publisher": "Jean-SebastienBinette",
  "bugs": {
    "url": "https://github.com/jsbinette/insightweaver/issues",
    "email": "jsbinette@yahoo.com"
  },
  "homepage": "https://github.com/jsbinette/InsightWeaver#readme",
"repository": {
  "url": "https://github.com/jsbinette/InsightWeaver",
  "type": "git"
  },
  "keywords": [
    "openai",
    "chatgpt",
    "gpt",
    "chat",
    "ai"
  ],
  "icon": "out/media/chat-instruciton-logo@4x.png",
  "galleryBanner": {
    "color": "#0000FF",
    "theme": "dark"
  },
  "engines": {
    "vscode": "^1.77.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
  "onCommand:insightweaver.jumpToRange",
  "onCommand:insightweaver.start",
  "onCommand:insightweaver.start-image",
  "onCommand:insightweaver.refactor",
  "onCommand:insightweaver.addComments",
  "onCommand:insightweaver.addDocumentaion",
  "onCommand:insightweaver.refresh",
  "onCommand:insightweaver.showFilesModeAllVisibleEditors",
  "onCommand:insightweaver.showFilesModeOnlyActiveEditor",
  "onCommand:insightweaver.toggleViewKeepFilesExpanded",
  "onCommand:insightweaver.debug.state.reset",
  "onCommand:insightweaver.reloadWordsAndStyles",
  "onCommand:insightweaver.chooseGroupBy",
  "onCommand:insightweaver.goToTag",
  "onCommand:insightweaver.rootToggle",
  "onCommand:insightweaver.outGroupToggle",
  "onCommand:insightweaver.outToggle",
  "onCommand:insightweaver.draggedRootElement",
  "onCommand:insightweaver.scanWorkspace"
],
  "main": "./out/extension.js",
  "contributes": {
    "viewsContainers": {
      "activitybar": [
        {
          "id": "chat-gpt-view",
          "title": "Chat Gpt",
          "icon": "./out/media/activity-bar-logo.svg"
        }
      ]
    },
    "views": {
      "chat-gpt-view": [
        {
          "type": "webview",
          "id": "chat-gpt-view-id",
          "name": "Chat Panel"
        }
      ],
      "explorer": [
        {
          "type": "webview",
          "id": "treeView",
          "name": "Tags"
        }
      ]
    },
    "commands": [
      {
        "command": "insightweaver.start",
        "title": "Ask to ChatGpt"
      },
      {
        "command": "insightweaver.start-image",
        "title": "Start Image"
      },
      {
        "command": "insightweaver.refactor",
        "title": "ChatGpt Refactor"
      },
      {
        "command": "insightweaver.addComments",
        "title": "ChatGpt Add Comments"
      },
      {
        "command": "insightweaver.addDocumentaion",
        "title": "ChatGpt Add Documentaion"
      },
      {
        "command": "insightweaver.refresh",
        "title": "Quick-Refresh View",
        "category": "InsightWeaver",
        "icon": {
          "light": "images/refresh-light.svg",
          "dark": "images/refresh-dark.svg"
        }
      },
      {
        "command": "insightweaver.showFilesModeAllVisibleEditors",
        "title": "Show Tags for All Open Tabs",
        "category": "InsightWeaver",
        "icon": {
          "light": "images/toggle-files-light.svg",
          "dark": "images/toggle-files-dark.svg"
        }
      },
      {
        "command": "insightweaver.showFilesModeOnlyActiveEditor",
        "title": "Show Tags for Active File",
        "category": "InsightWeaver",
        "icon": {
          "light": "images/toggle-files-light.svg",
          "dark": "images/toggle-files-dark.svg"
        }
      },
      {
        "command": "insightweaver.toggleViewKeepFilesExpanded",
        "title": "Toggle: Keep File View expanded",
        "category": "InsightWeaver",
        "icon": "images/toggle-expanded.svg"
      },
      {
        "command": "insightweaver.scanWorkspace",
        "title": "Scan Workspace for Tags",
        "category": "InsightWeaver",
        "icon": {
          "light": "images/scan-workspace.svg",
          "dark": "images/scan-workspace-dark.svg"
        }
      },
      {
        "command": "insightweaver.debug.state.reset",
        "title": "Reset the internal state to fix potential problems",
        "category": "InsightWeaver"
      },
      {
        "command": "insightweaver.reloadWordsAndStyles",
        "title": "DOES NOT WORK Reload Tag Names and Colors (styles)",
        "category": "InsightWeaver"
      }
    ],
    "keybindings": [
      {
        "command": "insightweaver.addDocumentaion",
        "key": "ctrl+alt+d",
        "mac": "shift+cmd+d"
      },
      {
        "command": "insightweaver.addComments",
        "key": "ctrl+alt+c",
        "mac": "shift+cmd+c"
      },
      {
        "command": "insightweaver.refactor",
        "key": "ctrl+alt+r",
        "mac": "shift+cmd+r"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "insightweaver.start",
          "when": "false"
        }
      ],
      "editor/context": [
        {
          "command": "insightweaver.refactor",
          "group": "ChatGpt",
          "when": "editorLangId == typescript || editorLangId == javascript || editorLangId == csharp || editorLangId == java"
        },
        {
          "command": "insightweaver.addComments",
          "group": "ChatGpt"
        },
        {
          "command": "insightweaver.addDocumentaion",
          "group": "ChatGpt",
          "when": "editorLangId == typescript || editorLangId == javascript || editorLangId == csharp || editorLangId == java"
        }
      ]
    },
    "webviews": [
      {
        "viewType": "markdown.preview",
        "icon": {
          "light": "./out/media/chat-instruciton-logo@4x.png",
          "dark": "./out/media/chat-instruciton-logo@4x.png"
        }
      }
    ],
    "configuration": {
      "type": "object",
      "title": "InsightWeaver",
      "properties": {
        "insightweaver.enable": {
          "category": "general",
          "type": "boolean",
          "default": true,
          "description": "Enable/Disable the extension.",
          "order": 1
        },
        "insightweaver.view.showFilesMode": {
          "category": "view",
          "type": "string",
          "enum": [
            "allVisibleEditors",
            "onlyActiveEditor",
            "wholeWorkspace"
          ],
          "default": "wholeWorkspace",
          "description": "Either show tags for all files in workspace, visible editors or only for the currently selected editor. default: Whole Workspace"
        },
        "insightweaver.view.expanded": {
          "category": "view",
          "type": "boolean",
          "default": false,
          "description": "Keep File View expanded otherwise collapsed."
        },
        "insightweaver.view.follow": {
          "category": "view",
          "type": "boolean",
          "default": true,
          "description": "Follow tags while clicking in the editor window. Highlights nearest tags in the tags view. (see `view.followMode` to change the follow behavior)"
        },
        "insightweaver.view.followMode": {
          "category": "view",
          "type": "string",
          "enum": [
            "nearest",
            "chapter"
          ],
          "default": "nearest",
          "markdownDescription": "Follow mode for highlighting tags in the tags view. **nearest** (Default): highlight nearest tag relative to the current selection. **chapter**: highlight nearest tag before or on the currently selected line."
        },
        "insightweaver.view.lineMode": {
          "category": "view",
          "type": "string",
          "enum": [
            "selected-tag",
            "current-line"
          ],
          "default": "selected-tag",
          "description": "Defines Jump to Next/Previous Tag behavior. **selected-tag** (Default): jump based on selected tag in editor. **current-line**: jump based on the current selected line number in the editor."
        },
        "insightweaver.view.words.hide": {
          "category": "view",
          "type": "boolean",
          "default": false,
          "markdownDescription": "DOES NOT WORK (already strip the tag from the label in extractTextAfterLastAtWord) Hide tags/trigger words in tag view if a comment was provided."
        },
        "insightweaver.view.exclude.gitIgnore": {
          "category": "view",
          "type": "boolean",
          "default": ".json",
          "markdownDescription": "Hide items from the tag view that match an exclusion defined by a .gitignore file (requires reload)"
        },
        "insightweaver.default.words.red": {
          "category": "trigger words",
          "type": "string",
          "default": "@out[\\s],@out-file[\\s],@out-line[\\s],@important[\\s]",
          "markdownDescription": "A comma-separated list of tags/trigger words (regex accepted) to highlight `red`."
        },
        "insightweaver.default.words.green": {
          "category": "trigger words",
          "type": "string",
          "default": "@instr\\-header[\\s]",
          "markdownDescription": "A comma-separated list of tags/trigger words (regex accepted) to highlight `green`."
        },
        "insightweaver.default.words.blue": {
          "category": "trigger words",
          "type": "string",
          "default": "@world[\\s]",
          "markdownDescription": "A comma-separated list of tags/trigger words (regex accepted) to highlight `blue`."
        },
        "insightweaver.default.words.purple": {
          "category": "trigger words",
          "type": "string",
          "default": "@plot[\\s]",
          "markdownDescription": "A comma-separated list of tags/trigger words (regex accepted) to highlight `purple`."
        },
        "insightweaver.default.words.brown": {
          "category": "trigger words",
          "type": "string",
          "default": "@general[\\s],@concept[\\s]",
          "markdownDescription": "A comma-separated list of tags/trigger words (regex accepted) to highlight `brown`."
        },
        "insightweaver.default.words.sky": {
          "category": "trigger words",
          "type": "string",
          "default": "@character[\\s],@must-have[\\s]",
          "markdownDescription": "A comma-separated list of tags/trigger words (regex accepted) to highlight `sky`."
        },
        "insightweaver.default.words.lime": {
          "category": "trigger words",
          "type": "string",
          "default": "@facts[\\s],@component[\\s]",
          "markdownDescription": "A comma-separated list of tags/trigger words (regex accepted) to highlight `lime`."
        },
        "insightweaver.default.words.yellow": {
          "category": "trigger words",
          "type": "string",
          "default": "@summarize\\((.*?)\\)[\\s],@end-summarize",
          "markdownDescription": "A comma-separated list of tags/trigger words (regex accepted) to highlight `yellow`."
        },
        "insightweaver.exceptions.words.ignore": {
          "category": "exceptions",
          "type": "string",
          "default": "",
          "markdownDescription": "A comma-separated list of tags/trigger words (`insightweaver.words`) that will not be decorated."
        },
        "insightweaver.exceptions.file.extensions.ignore": {
          "category": "exceptions",
          "type": "string",
          "default": "",
          "markdownDescription": "A comma-separated list of file extensions to ignore (e.g. .java)."
        },
        "insightweaver.expert.custom.styles": {
          "category": "expert",
          "type": "object",
          "default": {},
          "description": "Specify Custom Decoration Profiles",
          "properties": {}
        },
        "insightweaver.expert.custom.words.mapping": {
          "category": "expert",
          "type": "object",
          "default": {},
          "description": "Assigns tags/trigger words to decoration profiles",
          "properties": {}
        },
        "insightweaver.search.includes": {
          "type": "array",
          "default": [
            "**/*"
          ],
          "description": "Glob patterns that defines the files to search for. Only include files you need, DO NOT USE `{**/*.*}` for both perfmormance and avoiding binary files reason.",
          "items": {
            "anyOf": [
              {
                "type": "string",
                "description": "A glob pattern that defines the files to search for. Only include files you need, DO NOT USE `**/*.*` for both performance and avoiding binary files reason"
              }
            ]
          }
        },
        "insightweaver.search.excludes": {
          "type": "array",
          "default": [
            "**/.git/**",
            "**/node_modules/**",
            "**/bower_components/**",
            "**/dist/**",
            "**/build/**",
            "**/.vscode/**",
            "**/.InsightWeaver/**",
            "**/.github/**",
            "**/_output/**",
            "**/*.min.*",
            "**/*.map",
            "**/.next/**",
            "package-lock.json",
            "package.json",
            "**/*.visx"
          ],
          "description": "Glob pattern that defines files and folders to exclude while listing annotations.",
          "items": {
            "anyOf": [
              {
                "type": "string",
                "description": "A glob pattern that defines files and folders to exclude while listing annotations"
              }
            ]
          }
        },
        "insightweaver.search.maxFiles": {
          "type": "number",
          "default": 5120,
          "description": "Max files for searching"
        },
        "insightweaver.view.files.inFiles=": {
          "category": "view",
          "type": "boolean",
          "default": false,
          "order": 3,
          "markdownDescription": "Use .InsightWeaver files with tags and processed instructions for debugging purposes  or others."
        },
        "insightweaver.view.files.workspace": {
          "category": "view",
          "type": "boolean",
          "default": false,
          "order": 2,
          "markdownDescription": "Use workspace state with tags to lead them when opening instead of a scan. This works only if not in files"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "node ./esbuild.js",
    "package": "NODE_ENV=production node ./esbuild.js",
    "watch": "node ./esbuild.js --watch",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/node": "16.x",
    "@types/vscode": "^1.77.0",
    "@types/vscode-webview": "^1.57.1",
    "@typescript-eslint/eslint-plugin": "^5.56.0",
    "@typescript-eslint/parser": "^5.56.0",
    "@vscode/test-electron": "^2.3.0",
    "esbuild": "^0.16.17",
    "esbuild-copy-static-files": "^0.1.0",
    "eslint": "^8.36.0",
    "typescript": "^4.9.5"
  },
  "dependencies": {
    "@vscode/codicons": "^0.0.36",
    "@vscode/webview-ui-toolkit": "^1.2.2",
    "minimatch": "^9.0.3",
    "rxjs": "^7.8.0",
    "undici": "^5.21.0",
    "vscode-uri": "^3.0.3"
  }
}
